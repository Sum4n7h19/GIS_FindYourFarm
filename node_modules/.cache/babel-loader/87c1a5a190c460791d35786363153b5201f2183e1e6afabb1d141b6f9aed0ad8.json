{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_MultiPoint_ from '../geom/multipoint.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_MultiPolygon_ = function (coordinates, opt_layout) {\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n  this.setCoordinates(coordinates, opt_layout);\n};\n_ol_.inherits(_ol_geom_MultiPolygon_, _ol_geom_SimpleGeometry_);\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.appendPolygon = function (polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    _ol_array_.extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.clone = function () {\n  var multiPolygon = new _ol_geom_MultiPolygon_(null);\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n  multiPolygon.setFlatCoordinates(this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.containsXY = function (x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getArea = function () {\n  return _ol_geom_flat_area_.linearRingss(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getCoordinates = function (opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n  return _ol_geom_flat_inflate_.coordinatesss(flatCoordinates, 0, this.endss_, this.stride);\n};\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\n_ol_geom_MultiPolygon_.prototype.getEndss = function () {\n  return this.endss_;\n};\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\n_ol_geom_MultiPolygon_.prototype.getFlatInteriorPoints = function () {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getInteriorPoints = function () {\n  var interiorPoints = new _ol_geom_MultiPoint_(null);\n  interiorPoints.setFlatCoordinates(_ol_geom_GeometryLayout_.XYM, this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\n_ol_geom_MultiPolygon_.prototype.getOrientedFlatCoordinates = function () {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length = _ol_geom_flat_orient_.orientLinearRingss(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new _ol_geom_MultiPolygon_(null);\n  simplifiedMultiPolygon.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getPolygon = function (index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getPolygons = function () {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new _ol_geom_Polygon_(null);\n    polygon.setFlatCoordinates(layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getType = function () {\n  return _ol_geom_GeometryType_.MULTI_POLYGON;\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.intersectsExtent = function (extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.setCoordinates = function (coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\n_ol_geom_MultiPolygon_.prototype.setFlatCoordinates = function (layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\n_ol_geom_MultiPolygon_.prototype.setPolygons = function (polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    _ol_array_.extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default _ol_geom_MultiPolygon_;","map":{"version":3,"names":["_ol_","_ol_array_","_ol_extent_","_ol_geom_GeometryLayout_","_ol_geom_GeometryType_","_ol_geom_MultiPoint_","_ol_geom_Polygon_","_ol_geom_SimpleGeometry_","_ol_geom_flat_area_","_ol_geom_flat_center_","_ol_geom_flat_closest_","_ol_geom_flat_contains_","_ol_geom_flat_deflate_","_ol_geom_flat_inflate_","_ol_geom_flat_interiorpoint_","_ol_geom_flat_intersectsextent_","_ol_geom_flat_orient_","_ol_geom_flat_simplify_","_ol_geom_MultiPolygon_","coordinates","opt_layout","call","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","setCoordinates","inherits","prototype","appendPolygon","polygon","ends","flatCoordinates","getFlatCoordinates","slice","getEnds","push","offset","length","extend","i","ii","changed","clone","multiPolygon","len","newEndss","Array","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getExtent","getRevision","Math","sqrt","getssMaxSquaredDelta","stride","getssClosestPoint","getOrientedFlatCoordinates","containsXY","linearRingssContainsXY","getArea","linearRingss","getCoordinates","opt_right","undefined","orientLinearRingss","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","interiorPoints","XYM","linearRingssAreOriented","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEndss","quantizess","simplifiedMultiPolygon","XY","getPolygon","index","prevEnds","end","getPolygons","endss","polygons","j","jj","getType","MULTI_POLYGON","intersectsExtent","extent","setLayout","lastEnds","setFlatCoordinatesInternal","setPolygons","getLayout"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/node_modules/ol/geom/multipolygon.js"],"sourcesContent":["import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_MultiPoint_ from '../geom/multipoint.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_MultiPolygon_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_MultiPolygon_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    _ol_array_.extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.clone = function() {\n  var multiPolygon = new _ol_geom_MultiPolygon_(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\n_ol_geom_MultiPolygon_.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\n_ol_geom_MultiPolygon_.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getInteriorPoints = function() {\n  var interiorPoints = new _ol_geom_MultiPoint_(null);\n  interiorPoints.setFlatCoordinates(_ol_geom_GeometryLayout_.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\n_ol_geom_MultiPolygon_.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new _ol_geom_MultiPolygon_(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new _ol_geom_Polygon_(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\n_ol_geom_MultiPolygon_.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\n_ol_geom_MultiPolygon_.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    _ol_array_.extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default _ol_geom_MultiPolygon_;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,wBAAwB,MAAM,2BAA2B;AAChE,OAAOC,sBAAsB,MAAM,yBAAyB;AAC5D,OAAOC,oBAAoB,MAAM,uBAAuB;AACxD,OAAOC,iBAAiB,MAAM,oBAAoB;AAClD,OAAOC,wBAAwB,MAAM,2BAA2B;AAChE,OAAOC,mBAAmB,MAAM,sBAAsB;AACtD,OAAOC,qBAAqB,MAAM,wBAAwB;AAC1D,OAAOC,sBAAsB,MAAM,yBAAyB;AAC5D,OAAOC,uBAAuB,MAAM,0BAA0B;AAC9D,OAAOC,sBAAsB,MAAM,yBAAyB;AAC5D,OAAOC,sBAAsB,MAAM,yBAAyB;AAC5D,OAAOC,4BAA4B,MAAM,+BAA+B;AACxE,OAAOC,+BAA+B,MAAM,kCAAkC;AAC9E,OAAOC,qBAAqB,MAAM,wBAAwB;AAC1D,OAAOC,uBAAuB,MAAM,0BAA0B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,sBAAsB,GAAG,SAAAA,CAASC,WAAW,EAAEC,UAAU,EAAE;EAE7Db,wBAAwB,CAACc,IAAI,CAAC,IAAI,CAAC;;EAEnC;AACF;AACA;AACA;EACE,IAAI,CAACC,MAAM,GAAG,EAAE;;EAEhB;AACF;AACA;AACA;EACE,IAAI,CAACC,2BAA2B,GAAG,CAAC,CAAC;;EAErC;AACF;AACA;AACA;EACE,IAAI,CAACC,mBAAmB,GAAG,IAAI;;EAE/B;AACF;AACA;AACA;EACE,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;;EAEnB;AACF;AACA;AACA;EACE,IAAI,CAACC,iBAAiB,GAAG,CAAC,CAAC;;EAE3B;AACF;AACA;AACA;EACE,IAAI,CAACC,iBAAiB,GAAG,CAAC,CAAC;;EAE3B;AACF;AACA;AACA;EACE,IAAI,CAACC,wBAAwB,GAAG,IAAI;EAEpC,IAAI,CAACC,cAAc,CAACV,WAAW,EAAEC,UAAU,CAAC;AAE9C,CAAC;AAEDpB,IAAI,CAAC8B,QAAQ,CAACZ,sBAAsB,EAAEX,wBAAwB,CAAC;;AAG/D;AACA;AACA;AACA;AACA;AACAW,sBAAsB,CAACa,SAAS,CAACC,aAAa,GAAG,UAASC,OAAO,EAAE;EACjE;EACA,IAAIC,IAAI;EACR,IAAI,CAAC,IAAI,CAACC,eAAe,EAAE;IACzB,IAAI,CAACA,eAAe,GAAGF,OAAO,CAACG,kBAAkB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;IAC3DH,IAAI,GAAGD,OAAO,CAACK,OAAO,CAAC,CAAC,CAACD,KAAK,CAAC,CAAC;IAChC,IAAI,CAACf,MAAM,CAACiB,IAAI,CAAC,CAAC;EACpB,CAAC,MAAM;IACL,IAAIC,MAAM,GAAG,IAAI,CAACL,eAAe,CAACM,MAAM;IACxCxC,UAAU,CAACyC,MAAM,CAAC,IAAI,CAACP,eAAe,EAAEF,OAAO,CAACG,kBAAkB,CAAC,CAAC,CAAC;IACrEF,IAAI,GAAGD,OAAO,CAACK,OAAO,CAAC,CAAC,CAACD,KAAK,CAAC,CAAC;IAChC,IAAIM,CAAC,EAAEC,EAAE;IACT,KAAKD,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGV,IAAI,CAACO,MAAM,EAAEE,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;MACzCT,IAAI,CAACS,CAAC,CAAC,IAAIH,MAAM;IACnB;EACF;EACA,IAAI,CAAClB,MAAM,CAACiB,IAAI,CAACL,IAAI,CAAC;EACtB,IAAI,CAACW,OAAO,CAAC,CAAC;AAChB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA3B,sBAAsB,CAACa,SAAS,CAACe,KAAK,GAAG,YAAW;EAClD,IAAIC,YAAY,GAAG,IAAI7B,sBAAsB,CAAC,IAAI,CAAC;EAEnD,IAAI8B,GAAG,GAAG,IAAI,CAAC1B,MAAM,CAACmB,MAAM;EAC5B,IAAIQ,QAAQ,GAAG,IAAIC,KAAK,CAACF,GAAG,CAAC;EAC7B,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,GAAG,EAAE,EAAEL,CAAC,EAAE;IAC5BM,QAAQ,CAACN,CAAC,CAAC,GAAG,IAAI,CAACrB,MAAM,CAACqB,CAAC,CAAC,CAACN,KAAK,CAAC,CAAC;EACtC;EAEAU,YAAY,CAACI,kBAAkB,CAC3B,IAAI,CAACC,MAAM,EAAE,IAAI,CAACjB,eAAe,CAACE,KAAK,CAAC,CAAC,EAAEY,QAAQ,CAAC;EACxD,OAAOF,YAAY;AACrB,CAAC;;AAGD;AACA;AACA;AACA7B,sBAAsB,CAACa,SAAS,CAACsB,cAAc,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAEC,YAAY,EAAEC,kBAAkB,EAAE;EACjG,IAAIA,kBAAkB,GAClBvD,WAAW,CAACwD,wBAAwB,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,EAAEL,CAAC,EAAEC,CAAC,CAAC,EAAE;IAChE,OAAOE,kBAAkB;EAC3B;EACA,IAAI,IAAI,CAAC/B,iBAAiB,IAAI,IAAI,CAACkC,WAAW,CAAC,CAAC,EAAE;IAChD,IAAI,CAACnC,SAAS,GAAGoC,IAAI,CAACC,IAAI,CAACpD,sBAAsB,CAACqD,oBAAoB,CAClE,IAAI,CAAC5B,eAAe,EAAE,CAAC,EAAE,IAAI,CAACb,MAAM,EAAE,IAAI,CAAC0C,MAAM,EAAE,CAAC,CAAC,CAAC;IAC1D,IAAI,CAACtC,iBAAiB,GAAG,IAAI,CAACkC,WAAW,CAAC,CAAC;EAC7C;EACA,OAAOlD,sBAAsB,CAACuD,iBAAiB,CAC3C,IAAI,CAACC,0BAA0B,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAAC0C,MAAM,EAC9D,IAAI,CAACvC,SAAS,EAAE,IAAI,EAAE6B,CAAC,EAAEC,CAAC,EAAEC,YAAY,EAAEC,kBAAkB,CAAC;AACnE,CAAC;;AAGD;AACA;AACA;AACAvC,sBAAsB,CAACa,SAAS,CAACoC,UAAU,GAAG,UAASb,CAAC,EAAEC,CAAC,EAAE;EAC3D,OAAO5C,uBAAuB,CAACyD,sBAAsB,CACjD,IAAI,CAACF,0BAA0B,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAAC0C,MAAM,EAAEV,CAAC,EAAEC,CAAC,CAAC;AAC3E,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACArC,sBAAsB,CAACa,SAAS,CAACsC,OAAO,GAAG,YAAW;EACpD,OAAO7D,mBAAmB,CAAC8D,YAAY,CACnC,IAAI,CAACJ,0BAA0B,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAAC0C,MAAM,CAAC;AACrE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9C,sBAAsB,CAACa,SAAS,CAACwC,cAAc,GAAG,UAASC,SAAS,EAAE;EACpE,IAAIrC,eAAe;EACnB,IAAIqC,SAAS,KAAKC,SAAS,EAAE;IAC3BtC,eAAe,GAAG,IAAI,CAAC+B,0BAA0B,CAAC,CAAC,CAAC7B,KAAK,CAAC,CAAC;IAC3DrB,qBAAqB,CAAC0D,kBAAkB,CACpCvC,eAAe,EAAE,CAAC,EAAE,IAAI,CAACb,MAAM,EAAE,IAAI,CAAC0C,MAAM,EAAEQ,SAAS,CAAC;EAC9D,CAAC,MAAM;IACLrC,eAAe,GAAG,IAAI,CAACA,eAAe;EACxC;EAEA,OAAOtB,sBAAsB,CAAC8D,aAAa,CACvCxC,eAAe,EAAE,CAAC,EAAE,IAAI,CAACb,MAAM,EAAE,IAAI,CAAC0C,MAAM,CAAC;AACnD,CAAC;;AAGD;AACA;AACA;AACA9C,sBAAsB,CAACa,SAAS,CAAC6C,QAAQ,GAAG,YAAW;EACrD,OAAO,IAAI,CAACtD,MAAM;AACpB,CAAC;;AAGD;AACA;AACA;AACAJ,sBAAsB,CAACa,SAAS,CAAC8C,qBAAqB,GAAG,YAAW;EAClE,IAAI,IAAI,CAACtD,2BAA2B,IAAI,IAAI,CAACqC,WAAW,CAAC,CAAC,EAAE;IAC1D,IAAIkB,WAAW,GAAGrE,qBAAqB,CAAC6D,YAAY,CAChD,IAAI,CAACnC,eAAe,EAAE,CAAC,EAAE,IAAI,CAACb,MAAM,EAAE,IAAI,CAAC0C,MAAM,CAAC;IACtD,IAAI,CAACxC,mBAAmB,GAAGV,4BAA4B,CAACwD,YAAY,CAChE,IAAI,CAACJ,0BAA0B,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAAC0C,MAAM,EAC9Dc,WAAW,CAAC;IAChB,IAAI,CAACvD,2BAA2B,GAAG,IAAI,CAACqC,WAAW,CAAC,CAAC;EACvD;EACA,OAAO,IAAI,CAACpC,mBAAmB;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACAN,sBAAsB,CAACa,SAAS,CAACgD,iBAAiB,GAAG,YAAW;EAC9D,IAAIC,cAAc,GAAG,IAAI3E,oBAAoB,CAAC,IAAI,CAAC;EACnD2E,cAAc,CAAC7B,kBAAkB,CAAChD,wBAAwB,CAAC8E,GAAG,EAC1D,IAAI,CAACJ,qBAAqB,CAAC,CAAC,CAACxC,KAAK,CAAC,CAAC,CAAC;EACzC,OAAO2C,cAAc;AACvB,CAAC;;AAGD;AACA;AACA;AACA9D,sBAAsB,CAACa,SAAS,CAACmC,0BAA0B,GAAG,YAAW;EACvE,IAAI,IAAI,CAACvC,iBAAiB,IAAI,IAAI,CAACiC,WAAW,CAAC,CAAC,EAAE;IAChD,IAAIzB,eAAe,GAAG,IAAI,CAACA,eAAe;IAC1C,IAAInB,qBAAqB,CAACkE,uBAAuB,CAC7C/C,eAAe,EAAE,CAAC,EAAE,IAAI,CAACb,MAAM,EAAE,IAAI,CAAC0C,MAAM,CAAC,EAAE;MACjD,IAAI,CAACpC,wBAAwB,GAAGO,eAAe;IACjD,CAAC,MAAM;MACL,IAAI,CAACP,wBAAwB,GAAGO,eAAe,CAACE,KAAK,CAAC,CAAC;MACvD,IAAI,CAACT,wBAAwB,CAACa,MAAM,GAChCzB,qBAAqB,CAAC0D,kBAAkB,CACpC,IAAI,CAAC9C,wBAAwB,EAAE,CAAC,EAAE,IAAI,CAACN,MAAM,EAAE,IAAI,CAAC0C,MAAM,CAAC;IACrE;IACA,IAAI,CAACrC,iBAAiB,GAAG,IAAI,CAACiC,WAAW,CAAC,CAAC;EAC7C;EACA,OAAO,IAAI,CAAChC,wBAAwB;AACtC,CAAC;;AAGD;AACA;AACA;AACAV,sBAAsB,CAACa,SAAS,CAACoD,6BAA6B,GAAG,UAASC,gBAAgB,EAAE;EAC1F,IAAIC,yBAAyB,GAAG,EAAE;EAClC,IAAIC,eAAe,GAAG,EAAE;EACxBD,yBAAyB,CAAC5C,MAAM,GAAGxB,uBAAuB,CAACsE,UAAU,CACjE,IAAI,CAACpD,eAAe,EAAE,CAAC,EAAE,IAAI,CAACb,MAAM,EAAE,IAAI,CAAC0C,MAAM,EACjDH,IAAI,CAACC,IAAI,CAACsB,gBAAgB,CAAC,EAC3BC,yBAAyB,EAAE,CAAC,EAAEC,eAAe,CAAC;EAClD,IAAIE,sBAAsB,GAAG,IAAItE,sBAAsB,CAAC,IAAI,CAAC;EAC7DsE,sBAAsB,CAACrC,kBAAkB,CACrChD,wBAAwB,CAACsF,EAAE,EAAEJ,yBAAyB,EAAEC,eAAe,CAAC;EAC5E,OAAOE,sBAAsB;AAC/B,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACAtE,sBAAsB,CAACa,SAAS,CAAC2D,UAAU,GAAG,UAASC,KAAK,EAAE;EAC5D,IAAIA,KAAK,GAAG,CAAC,IAAI,IAAI,CAACrE,MAAM,CAACmB,MAAM,IAAIkD,KAAK,EAAE;IAC5C,OAAO,IAAI;EACb;EACA,IAAInD,MAAM;EACV,IAAImD,KAAK,KAAK,CAAC,EAAE;IACfnD,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM;IACL,IAAIoD,QAAQ,GAAG,IAAI,CAACtE,MAAM,CAACqE,KAAK,GAAG,CAAC,CAAC;IACrCnD,MAAM,GAAGoD,QAAQ,CAACA,QAAQ,CAACnD,MAAM,GAAG,CAAC,CAAC;EACxC;EACA,IAAIP,IAAI,GAAG,IAAI,CAACZ,MAAM,CAACqE,KAAK,CAAC,CAACtD,KAAK,CAAC,CAAC;EACrC,IAAIwD,GAAG,GAAG3D,IAAI,CAACA,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC;EAC/B,IAAID,MAAM,KAAK,CAAC,EAAE;IAChB,IAAIG,CAAC,EAAEC,EAAE;IACT,KAAKD,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGV,IAAI,CAACO,MAAM,EAAEE,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;MACzCT,IAAI,CAACS,CAAC,CAAC,IAAIH,MAAM;IACnB;EACF;EACA,IAAIP,OAAO,GAAG,IAAI3B,iBAAiB,CAAC,IAAI,CAAC;EACzC2B,OAAO,CAACkB,kBAAkB,CACtB,IAAI,CAACC,MAAM,EAAE,IAAI,CAACjB,eAAe,CAACE,KAAK,CAACG,MAAM,EAAEqD,GAAG,CAAC,EAAE3D,IAAI,CAAC;EAC/D,OAAOD,OAAO;AAChB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACAf,sBAAsB,CAACa,SAAS,CAAC+D,WAAW,GAAG,YAAW;EACxD,IAAI1C,MAAM,GAAG,IAAI,CAACA,MAAM;EACxB,IAAIjB,eAAe,GAAG,IAAI,CAACA,eAAe;EAC1C,IAAI4D,KAAK,GAAG,IAAI,CAACzE,MAAM;EACvB,IAAI0E,QAAQ,GAAG,EAAE;EACjB,IAAIxD,MAAM,GAAG,CAAC;EACd,IAAIG,CAAC,EAAEC,EAAE,EAAEqD,CAAC,EAAEC,EAAE;EAChB,KAAKvD,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGmD,KAAK,CAACtD,MAAM,EAAEE,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;IAC1C,IAAIT,IAAI,GAAG6D,KAAK,CAACpD,CAAC,CAAC,CAACN,KAAK,CAAC,CAAC;IAC3B,IAAIwD,GAAG,GAAG3D,IAAI,CAACA,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC;IAC/B,IAAID,MAAM,KAAK,CAAC,EAAE;MAChB,KAAKyD,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGhE,IAAI,CAACO,MAAM,EAAEwD,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;QACzC/D,IAAI,CAAC+D,CAAC,CAAC,IAAIzD,MAAM;MACnB;IACF;IACA,IAAIP,OAAO,GAAG,IAAI3B,iBAAiB,CAAC,IAAI,CAAC;IACzC2B,OAAO,CAACkB,kBAAkB,CACtBC,MAAM,EAAEjB,eAAe,CAACE,KAAK,CAACG,MAAM,EAAEqD,GAAG,CAAC,EAAE3D,IAAI,CAAC;IACrD8D,QAAQ,CAACzD,IAAI,CAACN,OAAO,CAAC;IACtBO,MAAM,GAAGqD,GAAG;EACd;EACA,OAAOG,QAAQ;AACjB,CAAC;;AAGD;AACA;AACA;AACA;AACA9E,sBAAsB,CAACa,SAAS,CAACoE,OAAO,GAAG,YAAW;EACpD,OAAO/F,sBAAsB,CAACgG,aAAa;AAC7C,CAAC;;AAGD;AACA;AACA;AACA;AACAlF,sBAAsB,CAACa,SAAS,CAACsE,gBAAgB,GAAG,UAASC,MAAM,EAAE;EACnE,OAAOvF,+BAA+B,CAACuD,YAAY,CAC/C,IAAI,CAACJ,0BAA0B,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC5C,MAAM,EAAE,IAAI,CAAC0C,MAAM,EAAEsC,MAAM,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACApF,sBAAsB,CAACa,SAAS,CAACF,cAAc,GAAG,UAASV,WAAW,EAAEC,UAAU,EAAE;EAClF,IAAI,CAACD,WAAW,EAAE;IAChB,IAAI,CAACgC,kBAAkB,CAAChD,wBAAwB,CAACsF,EAAE,EAAE,IAAI,EAAE,IAAI,CAACnE,MAAM,CAAC;EACzE,CAAC,MAAM;IACL,IAAI,CAACiF,SAAS,CAACnF,UAAU,EAAED,WAAW,EAAE,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,CAACgB,eAAe,EAAE;MACzB,IAAI,CAACA,eAAe,GAAG,EAAE;IAC3B;IACA,IAAI4D,KAAK,GAAGnF,sBAAsB,CAAC+D,aAAa,CAC5C,IAAI,CAACxC,eAAe,EAAE,CAAC,EAAEhB,WAAW,EAAE,IAAI,CAAC6C,MAAM,EAAE,IAAI,CAAC1C,MAAM,CAAC;IACnE,IAAIyE,KAAK,CAACtD,MAAM,KAAK,CAAC,EAAE;MACtB,IAAI,CAACN,eAAe,CAACM,MAAM,GAAG,CAAC;IACjC,CAAC,MAAM;MACL,IAAI+D,QAAQ,GAAGT,KAAK,CAACA,KAAK,CAACtD,MAAM,GAAG,CAAC,CAAC;MACtC,IAAI,CAACN,eAAe,CAACM,MAAM,GAAG+D,QAAQ,CAAC/D,MAAM,KAAK,CAAC,GACjD,CAAC,GAAG+D,QAAQ,CAACA,QAAQ,CAAC/D,MAAM,GAAG,CAAC,CAAC;IACrC;IACA,IAAI,CAACI,OAAO,CAAC,CAAC;EAChB;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA3B,sBAAsB,CAACa,SAAS,CAACoB,kBAAkB,GAAG,UAASC,MAAM,EAAEjB,eAAe,EAAE4D,KAAK,EAAE;EAC7F,IAAI,CAACU,0BAA0B,CAACrD,MAAM,EAAEjB,eAAe,CAAC;EACxD,IAAI,CAACb,MAAM,GAAGyE,KAAK;EACnB,IAAI,CAAClD,OAAO,CAAC,CAAC;AAChB,CAAC;;AAGD;AACA;AACA;AACA3B,sBAAsB,CAACa,SAAS,CAAC2E,WAAW,GAAG,UAASV,QAAQ,EAAE;EAChE,IAAI5C,MAAM,GAAG,IAAI,CAACuD,SAAS,CAAC,CAAC;EAC7B,IAAIxE,eAAe,GAAG,EAAE;EACxB,IAAI4D,KAAK,GAAG,EAAE;EACd,IAAIpD,CAAC,EAAEC,EAAE,EAAEV,IAAI;EACf,KAAKS,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGoD,QAAQ,CAACvD,MAAM,EAAEE,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;IAC7C,IAAIV,OAAO,GAAG+D,QAAQ,CAACrD,CAAC,CAAC;IACzB,IAAIA,CAAC,KAAK,CAAC,EAAE;MACXS,MAAM,GAAGnB,OAAO,CAAC0E,SAAS,CAAC,CAAC;IAC9B;IACA,IAAInE,MAAM,GAAGL,eAAe,CAACM,MAAM;IACnCP,IAAI,GAAGD,OAAO,CAACK,OAAO,CAAC,CAAC;IACxB,IAAI2D,CAAC,EAAEC,EAAE;IACT,KAAKD,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGhE,IAAI,CAACO,MAAM,EAAEwD,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;MACzC/D,IAAI,CAAC+D,CAAC,CAAC,IAAIzD,MAAM;IACnB;IACAvC,UAAU,CAACyC,MAAM,CAACP,eAAe,EAAEF,OAAO,CAACG,kBAAkB,CAAC,CAAC,CAAC;IAChE2D,KAAK,CAACxD,IAAI,CAACL,IAAI,CAAC;EAClB;EACA,IAAI,CAACiB,kBAAkB,CAACC,MAAM,EAAEjB,eAAe,EAAE4D,KAAK,CAAC;AACzD,CAAC;AACD,eAAe7E,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}