{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\Components\\\\Menu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport \"../assests/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CascadingDropdown = () => {\n  _s();\n  const [parcels, setParcels] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\n  useEffect(() => {\n    // Fetch all parcels using Axios\n    axios.get(\"http://127.0.0.1:5000/parcel\").then(response => {\n      if (!response.data) {\n        throw new Error(\"Empty response or response data is not valid JSON\");\n      }\n      console.log(\"Fetched data:\", response.data);\n      setParcels(response.data);\n    }).catch(error => console.error(\"Error fetching parcels:\", error));\n  }, []);\n  const getOptions = (property, parentValue) => {\n    const filteredOptions = parcels.filter(parcel => parentValue ? parcel[property] === parentValue : true).map(parcel => ({\n      value: parcel.Event_id,\n      label: parcel[property]\n    }));\n    const uniqueOptions = Array.from(new Map(filteredOptions.map(option => [option.value, option])).values());\n    return uniqueOptions;\n  };\n  const stateOptions = getOptions(\"KGISStateName\");\n  const districtOptions = getOptions(\"KGISDistrictName\", selectedState);\n  const talukOptions = getOptions(\"KGISTalukName\", selectedDistrict);\n  const handleChangeState = selectedOption => {\n    setSelectedState(selectedOption);\n    setSelectedDistrict(null);\n    setSelectedTaluk(null);\n  };\n  const handleChangeDistrict = selectedOption => {\n    setSelectedDistrict(selectedOption);\n    setSelectedTaluk(null);\n  };\n  const handleChangeTaluk = selectedOption => {\n    setSelectedTaluk(selectedOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Farm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stateDropdown\",\n        children: \"Select State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"stateDropdown\",\n        options: stateOptions,\n        value: selectedState,\n        onChange: handleChangeState,\n        placeholder: \"Select State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"districtDropdown\",\n        children: \"Select District:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"districtDropdown\",\n        options: districtOptions,\n        value: selectedDistrict,\n        onChange: handleChangeDistrict,\n        placeholder: \"Select District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"talukDropdown\",\n        children: \"Select Taluk:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"talukDropdown\",\n        options: talukOptions,\n        value: selectedTaluk,\n        onChange: handleChangeTaluk,\n        placeholder: \"Select Taluk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CascadingDropdown, \"mQHv/byyqeCJF2Ey1i5ayzCA8ac=\");\n_c = CascadingDropdown;\nexport default CascadingDropdown;\nvar _c;\n$RefreshReg$(_c, \"CascadingDropdown\");","map":{"version":3,"names":["React","useEffect","useState","axios","Select","jsxDEV","_jsxDEV","CascadingDropdown","_s","parcels","setParcels","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","selectedTaluk","setSelectedTaluk","get","then","response","data","Error","console","log","catch","error","getOptions","property","parentValue","filteredOptions","filter","parcel","map","value","Event_id","label","uniqueOptions","Array","from","Map","option","values","stateOptions","districtOptions","talukOptions","handleChangeState","selectedOption","handleChangeDistrict","handleChangeTaluk","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","options","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/Components/Menu.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport \"../assests/App.css\";\r\n\r\nconst CascadingDropdown = () => {\r\n  const [parcels, setParcels] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch all parcels using Axios\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/parcel\")\r\n      .then((response) => {\r\n        if (!response.data) {\r\n          throw new Error(\"Empty response or response data is not valid JSON\");\r\n        }\r\n        console.log(\"Fetched data:\", response.data);\r\n        setParcels(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching parcels:\", error));\r\n  }, []);\r\n\r\n  const getOptions = (property, parentValue) => {\r\n    const filteredOptions = parcels\r\n      .filter((parcel) => (parentValue ? parcel[property] === parentValue : true))\r\n      .map((parcel) => ({ value: parcel.Event_id, label: parcel[property] }));\r\n\r\n    const uniqueOptions = Array.from(new Map(filteredOptions.map((option) => [option.value, option])).values());\r\n    return uniqueOptions;\r\n  };\r\n\r\n  const stateOptions = getOptions(\"KGISStateName\");\r\n  const districtOptions = getOptions(\"KGISDistrictName\", selectedState);\r\n  const talukOptions = getOptions(\"KGISTalukName\", selectedDistrict);\r\n\r\n  const handleChangeState = (selectedOption) => {\r\n    setSelectedState(selectedOption);\r\n    setSelectedDistrict(null);\r\n    setSelectedTaluk(null);\r\n  };\r\n\r\n  const handleChangeDistrict = (selectedOption) => {\r\n    setSelectedDistrict(selectedOption);\r\n    setSelectedTaluk(null);\r\n  };\r\n\r\n  const handleChangeTaluk = (selectedOption) => {\r\n    setSelectedTaluk(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"container\">\r\n        <h1>Select the Farm</h1>\r\n        <label htmlFor=\"stateDropdown\">Select State:</label>\r\n        <Select\r\n          id=\"stateDropdown\"\r\n          options={stateOptions}\r\n          value={selectedState}\r\n          onChange={handleChangeState}\r\n          placeholder=\"Select State\"\r\n        />\r\n        <label htmlFor=\"districtDropdown\">Select District:</label>\r\n        <Select\r\n          id=\"districtDropdown\"\r\n          options={districtOptions}\r\n          value={selectedDistrict}\r\n          onChange={handleChangeDistrict}\r\n          placeholder=\"Select District\"\r\n        />\r\n        <label htmlFor=\"talukDropdown\">Select Taluk:</label>\r\n        <Select\r\n          id=\"talukDropdown\"\r\n          options={talukOptions}\r\n          value={selectedTaluk}\r\n          onChange={handleChangeTaluk}\r\n          placeholder=\"Select Taluk\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CascadingDropdown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}