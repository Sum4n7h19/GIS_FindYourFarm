{"ast":null,"code":"/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link ol.style.Icon}, {@link ol.style.Circle} and\n * {@link ol.style.RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {ol.StyleImageOptions} options Options.\n * @api\n */\nvar _ol_style_Image_ = function (options) {\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\n_ol_style_Image_.prototype.getOpacity = function () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\n_ol_style_Image_.prototype.getRotateWithView = function () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\n_ol_style_Image_.prototype.getRotation = function () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\n_ol_style_Image_.prototype.getScale = function () {\n  return this.scale_;\n};\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\n_ol_style_Image_.prototype.getSnapToPixel = function () {\n  return this.snapToPixel_;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\n_ol_style_Image_.prototype.getAnchor = function () {};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getImage = function (pixelRatio) {};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getHitDetectionImage = function (pixelRatio) {};\n\n/**\n * @abstract\n * @return {ol.ImageState} Image state.\n */\n_ol_style_Image_.prototype.getImageState = function () {};\n\n/**\n * @abstract\n * @return {ol.Size} Image size.\n */\n_ol_style_Image_.prototype.getImageSize = function () {};\n\n/**\n * @abstract\n * @return {ol.Size} Size of the hit-detection image.\n */\n_ol_style_Image_.prototype.getHitDetectionImageSize = function () {};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\n_ol_style_Image_.prototype.getOrigin = function () {};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {ol.Size} Size.\n */\n_ol_style_Image_.prototype.getSize = function () {};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\n_ol_style_Image_.prototype.setOpacity = function (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n */\n_ol_style_Image_.prototype.setRotateWithView = function (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\n_ol_style_Image_.prototype.setRotation = function (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\n_ol_style_Image_.prototype.setScale = function (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n */\n_ol_style_Image_.prototype.setSnapToPixel = function (snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {ol.EventsKey|undefined} Listener key.\n * @template T\n */\n_ol_style_Image_.prototype.listenImageChange = function (listener, thisArg) {};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n_ol_style_Image_.prototype.load = function () {};\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\n_ol_style_Image_.prototype.unlistenImageChange = function (listener, thisArg) {};\nexport default _ol_style_Image_;","map":{"version":3,"names":["_ol_style_Image_","options","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scale","snapToPixel_","snapToPixel","prototype","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","listener","thisArg","load","unlistenImageChange"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/node_modules/ol/style/image.js"],"sourcesContent":["/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link ol.style.Icon}, {@link ol.style.Circle} and\n * {@link ol.style.RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {ol.StyleImageOptions} options Options.\n * @api\n */\nvar _ol_style_Image_ = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\n_ol_style_Image_.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\n_ol_style_Image_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\n_ol_style_Image_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\n_ol_style_Image_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\n_ol_style_Image_.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\n_ol_style_Image_.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {ol.ImageState} Image state.\n */\n_ol_style_Image_.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Image size.\n */\n_ol_style_Image_.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Size of the hit-detection image.\n */\n_ol_style_Image_.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\n_ol_style_Image_.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {ol.Size} Size.\n */\n_ol_style_Image_.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\n_ol_style_Image_.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n */\n_ol_style_Image_.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\n_ol_style_Image_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\n_ol_style_Image_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n */\n_ol_style_Image_.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {ol.EventsKey|undefined} Listener key.\n * @template T\n */\n_ol_style_Image_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n_ol_style_Image_.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\n_ol_style_Image_.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default _ol_style_Image_;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}