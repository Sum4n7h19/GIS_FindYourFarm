{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Components/Header\";\nimport { Container, Form } from \"react-bootstrap\";\nimport Footer from \"./Components/Footer\";\nimport Menu from \"./Components/Menu\";\nimport \"./assests/App.css\";\nimport Map from \"./Components/Map\";\nimport { TileLayer, MapContainer, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\"; //\nimport map from \"./map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [json, setJson] = useState(null);\n  const getData = data => {\n    console.log(data);\n    setData(data);\n    // Fetch all parcels using Axios\n    axios.get(`http://localhost:5000/parcelapi/${data[1]}/${data[0]}`).then(response => {\n      if (!response.data) {\n        throw new Error(\"Empty response or response data is not valid JSON\");\n      }\n      setJson(response.data);\n    }).catch(error => console.error(\"Error fetching parcels:\", error));\n  };\n  console.log(json);\n  const setColor = ({\n    properties\n  }) => {\n    return {\n      weight: 1,\n      color: \"red\"\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          onSubmit: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [14.0, 77.22],\n          zoom: 7,\n          className: \"map-container\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), json && /*#__PURE__*/_jsxDEV(GeoJSON, {\n            data: json,\n            style: setColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"yV8riFHvR1T+yjMxlbfqhMRB0fU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Header","Container","Form","Footer","Menu","Map","TileLayer","MapContainer","GeoJSON","map","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","json","setJson","getData","console","log","get","then","response","Error","catch","error","setColor","properties","weight","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","center","zoom","url","attribution","style","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Components/Header\";\nimport { Container, Form } from \"react-bootstrap\";\nimport Footer from \"./Components/Footer\";\nimport Menu from \"./Components/Menu\";\nimport \"./assests/App.css\";\nimport Map from \"./Components/Map\";\nimport { TileLayer, MapContainer, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\"; //\nimport map from \"./map.json\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [json, setJson] = useState(null);\n  const getData = (data) => {\n    console.log(data);\n    setData(data);\n    // Fetch all parcels using Axios\n    axios\n      .get(`http://localhost:5000/parcelapi/${data[1]}/${data[0]}`)\n      .then((response) => {\n        if (!response.data) {\n          throw new Error(\"Empty response or response data is not valid JSON\");\n        }\n        setJson(response.data);\n      })\n      .catch((error) => console.error(\"Error fetching parcels:\", error));\n  };\n  console.log(json);\n  const setColor = ({ properties }) => {\n    return { weight: 1, color: \"red\"  };\n  };\n  return (\n    <>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Menu onSubmit={getData} />\n          <MapContainer\n            center={[14.0, 77.22]}\n            zoom={7}\n            className=\"map-container\"\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {json &&<GeoJSON data={json} style={setColor} />} \n          </MapContainer>\n        </Container>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}