{"ast":null,"code":"import _ol_array_ from '../../array.js';\nimport _ol_geom_flat_contains_ from '../flat/contains.js';\nvar _ol_geom_flat_interiorpoint_ = {};\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRings = function (flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if (y <= y1 && y2 <= y || y1 <= y && y <= y2) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(_ol_array_.numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (_ol_geom_flat_contains_.linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n};\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRingss = function (flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = _ol_geom_flat_interiorpoint_.linearRings(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n};\nexport default _ol_geom_flat_interiorpoint_;","map":{"version":3,"names":["_ol_array_","_ol_geom_flat_contains_","_ol_geom_flat_interiorpoint_","linearRings","flatCoordinates","offset","ends","stride","flatCenters","flatCentersOffset","opt_dest","i","ii","x","x1","x2","y1","y2","y","intersections","r","rr","length","end","push","pointX","NaN","maxSegmentLength","Infinity","sort","numberSafeCompareFunction","segmentLength","Math","abs","linearRingsContainsXY","isNaN","linearRingss","endss","interiorPoints"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/node_modules/ol/geom/flat/interiorpoint.js"],"sourcesContent":["import _ol_array_ from '../../array.js';\nimport _ol_geom_flat_contains_ from '../flat/contains.js';\nvar _ol_geom_flat_interiorpoint_ = {};\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRings = function(flatCoordinates, offset,\n    ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(_ol_array_.numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (_ol_geom_flat_contains_.linearRingsContainsXY(\n          flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\n_ol_geom_flat_interiorpoint_.linearRingss = function(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  var i, ii;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = _ol_geom_flat_interiorpoint_.linearRings(flatCoordinates,\n        offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n};\nexport default _ol_geom_flat_interiorpoint_;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}