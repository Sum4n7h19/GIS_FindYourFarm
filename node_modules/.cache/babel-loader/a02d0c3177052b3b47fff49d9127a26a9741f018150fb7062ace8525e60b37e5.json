{"ast":null,"code":"import _ol_obj_ from './obj.js';\nvar _ol_events_ = {};\n\n/**\n * @param {ol.EventsKey} listenerObj Listener object.\n * @return {ol.EventsListenerFunctionType} Bound listener.\n */\n_ol_events_.bindListener_ = function (listenerObj) {\n  var boundListener = function (evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n};\n\n/**\n * Finds the matching {@link ol.EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!ol.EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link ol.events.unlistenByKey}.\n * @return {ol.EventsKey|undefined} The matching listener object.\n * @private\n */\n_ol_events_.findListener_ = function (listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener && listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n};\n\n/**\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<ol.EventsKey>|undefined} Listeners.\n */\n_ol_events_.getListeners = function (target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n};\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {ol.EventTargetLike} target Target.\n * @return {!Object.<string, Array.<ol.EventsKey>>} Map of\n *     listeners by event type.\n * @private\n */\n_ol_events_.getListenerMap_ = function (target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n};\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @private\n */\n_ol_events_.removeListeners_ = function (target, type) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      _ol_obj_.clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n};\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link ol.events.unlistenByKey}.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {ol.EventsKey} Unique key for the listener.\n */\n_ol_events_.listen = function (target, type, listener, opt_this, opt_once) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {ol.EventsKey} */{\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    };\n    target.addEventListener(type, _ol_events_.bindListener_(listenerObj));\n    listeners.push(listenerObj);\n  }\n  return listenerObj;\n};\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link ol.events.unlistenByKey} in case the listener needs to be unregistered\n * before it is called.\n *\n * When {@link ol.events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {ol.EventsKey} Key for unlistenByKey.\n */\n_ol_events_.listenOnce = function (target, type, listener, opt_this) {\n  return _ol_events_.listen(target, type, listener, opt_this, true);\n};\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link ol.events.listen} call.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\n_ol_events_.unlisten = function (target, type, listener, opt_this) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n  }\n};\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link ol.events.listen} or {@link ol.events.listenOnce}.\n *\n * @param {ol.EventsKey} key The key.\n */\n_ol_events_.unlistenByKey = function (key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = _ol_events_.getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        _ol_events_.removeListeners_(key.target, key.type);\n      }\n    }\n    _ol_obj_.clear(key);\n  }\n};\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {ol.EventTargetLike} target Target.\n */\n_ol_events_.unlistenAll = function (target) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  for (var type in listenerMap) {\n    _ol_events_.removeListeners_(target, type);\n  }\n};\nexport default _ol_events_;","map":{"version":3,"names":["_ol_obj_","_ol_events_","bindListener_","listenerObj","boundListener","evt","listener","bindTo","target","callOnce","unlistenByKey","call","findListener_","listeners","opt_this","opt_setDeleteIndex","i","ii","length","deleteIndex","undefined","getListeners","type","listenerMap","ol_lm","getListenerMap_","removeListeners_","removeEventListener","clear","Object","keys","listen","opt_once","addEventListener","push","listenOnce","unlisten","key","indexOf","splice","unlistenAll"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/node_modules/ol/events.js"],"sourcesContent":["import _ol_obj_ from './obj.js';\nvar _ol_events_ = {};\n\n\n/**\n * @param {ol.EventsKey} listenerObj Listener object.\n * @return {ol.EventsListenerFunctionType} Bound listener.\n */\n_ol_events_.bindListener_ = function(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n};\n\n\n/**\n * Finds the matching {@link ol.EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!ol.EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link ol.events.unlistenByKey}.\n * @return {ol.EventsKey|undefined} The matching listener object.\n * @private\n */\n_ol_events_.findListener_ = function(listeners, listener, opt_this,\n    opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<ol.EventsKey>|undefined} Listeners.\n */\n_ol_events_.getListeners = function(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n};\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {ol.EventTargetLike} target Target.\n * @return {!Object.<string, Array.<ol.EventsKey>>} Map of\n *     listeners by event type.\n * @private\n */\n_ol_events_.getListenerMap_ = function(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n};\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {ol.EventTargetLike} target Target.\n * @param {string} type Type.\n * @private\n */\n_ol_events_.removeListeners_ = function(target, type) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      _ol_obj_.clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n};\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link ol.events.unlistenByKey}.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {ol.EventsKey} Unique key for the listener.\n */\n_ol_events_.listen = function(target, type, listener, opt_this, opt_once) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this,\n      false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {ol.EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, _ol_events_.bindListener_(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n};\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link ol.events.unlistenByKey} in case the listener needs to be unregistered\n * before it is called.\n *\n * When {@link ol.events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {ol.EventsKey} Key for unlistenByKey.\n */\n_ol_events_.listenOnce = function(target, type, listener, opt_this) {\n  return _ol_events_.listen(target, type, listener, opt_this, true);\n};\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link ol.events.listen} call.\n *\n * @param {ol.EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ol.EventsListenerFunctionType} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\n_ol_events_.unlisten = function(target, type, listener, opt_this) {\n  var listeners = _ol_events_.getListeners(target, type);\n  if (listeners) {\n    var listenerObj = _ol_events_.findListener_(listeners, listener, opt_this,\n        true);\n    if (listenerObj) {\n      _ol_events_.unlistenByKey(listenerObj);\n    }\n  }\n};\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link ol.events.listen} or {@link ol.events.listenOnce}.\n *\n * @param {ol.EventsKey} key The key.\n */\n_ol_events_.unlistenByKey = function(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = _ol_events_.getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        _ol_events_.removeListeners_(key.target, key.type);\n      }\n    }\n    _ol_obj_.clear(key);\n  }\n};\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {ol.EventTargetLike} target Target.\n */\n_ol_events_.unlistenAll = function(target) {\n  var listenerMap = _ol_events_.getListenerMap_(target);\n  for (var type in listenerMap) {\n    _ol_events_.removeListeners_(target, type);\n  }\n};\nexport default _ol_events_;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}