{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\Components\\\\Menu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-dropdown-select\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  _s();\n  const [parcels, setParcels] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\n  const [selectedHobli, setSelectedHobli] = useState(null);\n  const [selectedVillage, setSelectedVillage] = useState(null);\n  useEffect(() => {\n    // Fetch all parcels using Axios\n    axios.get(\"http://127.0.0.1:5000/parcel\").then(response => {\n      if (!response.data) {\n        throw new Error(\"Empty response or response data is not valid JSON\");\n      }\n      console.log(\"Fetched data:\", response.data); // Log the fetched data\n      setParcels(response.data);\n    }).catch(error => console.error(\"Error fetching parcels:\", error));\n  }, []);\n  const getOptionsByParentId = parentId => {\n    return parentId ? parcels.filter(parcel => parcel.parentId === parentId) : [];\n  };\n  const stateOptions = parcels.filter(parcel => !parcel.parentId).map(parcel => ({\n    value: parcel.id,\n    label: parcel.name\n  }));\n  const districtOptions = getOptionsByParentId(selectedState === null || selectedState === void 0 ? void 0 : selectedState.value).map(parcel => ({\n    value: parcel.id,\n    label: parcel.name\n  }));\n  const talukOptions = getOptionsByParentId(selectedDistrict === null || selectedDistrict === void 0 ? void 0 : selectedDistrict.value).map(parcel => ({\n    value: parcel.id,\n    label: parcel.name\n  }));\n  const hobliOptions = getOptionsByParentId(selectedTaluk === null || selectedTaluk === void 0 ? void 0 : selectedTaluk.value).map(parcel => ({\n    value: parcel.id,\n    label: parcel.name\n  }));\n  const villageOptions = getOptionsByParentId(selectedHobli === null || selectedHobli === void 0 ? void 0 : selectedHobli.value).map(parcel => ({\n    value: parcel.id,\n    label: parcel.name\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Farm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stateDropdown\",\n        children: \"Select State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"stateDropdown\",\n        options: stateOptions,\n        value: selectedState,\n        onChange: selected => setSelectedState(selected[0] || null),\n        placeholder: \"Select State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"districtDropdown\",\n        children: \"Select District:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"districtDropdown\",\n        options: districtOptions,\n        value: selectedDistrict,\n        onChange: selected => setSelectedDistrict(selected[0] || null),\n        placeholder: \"Select District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"talukDropdown\",\n        children: \"Select Taluk:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"talukDropdown\",\n        options: talukOptions,\n        value: selectedTaluk,\n        onChange: selected => setSelectedTaluk(selected[0] || null),\n        placeholder: \"Select Taluk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hobliDropdown\",\n        children: \"Select Hobli:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"hobliDropdown\",\n        options: hobliOptions,\n        value: selectedHobli,\n        onChange: selected => setSelectedHobli(selected[0] || null),\n        placeholder: \"Select Hobli\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"villageDropdown\",\n        children: \"Select Village:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"villageDropdown\",\n        options: villageOptions,\n        value: selectedVillage,\n        onChange: selected => setSelectedVillage(selected[0] || null),\n        placeholder: \"Select Village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Menu, \"gOSWcNgPOsOYMuD8jpsz9wQbTB4=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useEffect","useState","Select","axios","jsxDEV","_jsxDEV","Menu","_s","parcels","setParcels","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","selectedTaluk","setSelectedTaluk","selectedHobli","setSelectedHobli","selectedVillage","setSelectedVillage","get","then","response","data","Error","console","log","catch","error","getOptionsByParentId","parentId","filter","parcel","stateOptions","map","value","id","label","name","districtOptions","talukOptions","hobliOptions","villageOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","options","onChange","selected","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/Components/Menu.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-dropdown-select\";\r\nimport axios from \"axios\";\r\n\r\nconst Menu = () => {\r\n  const [parcels, setParcels] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\r\n  const [selectedHobli, setSelectedHobli] = useState(null);\r\n  const [selectedVillage, setSelectedVillage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch all parcels using Axios\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/parcel\")\r\n      .then((response) => {\r\n        if (!response.data) {\r\n          throw new Error(\"Empty response or response data is not valid JSON\");\r\n        }\r\n        console.log(\"Fetched data:\", response.data); // Log the fetched data\r\n        setParcels(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching parcels:\", error));\r\n  }, []);\r\n\r\n  const getOptionsByParentId = (parentId) => {\r\n    return parentId\r\n      ? parcels.filter((parcel) => parcel.parentId === parentId)\r\n      : [];\r\n  };\r\n\r\n  const stateOptions = parcels\r\n    .filter((parcel) => !parcel.parentId)\r\n    .map((parcel) => ({\r\n      value: parcel.id,\r\n      label: parcel.name,\r\n    }));\r\n\r\n  const districtOptions = getOptionsByParentId(selectedState?.value).map(\r\n    (parcel) => ({\r\n      value: parcel.id,\r\n      label: parcel.name,\r\n    })\r\n  );\r\n\r\n  const talukOptions = getOptionsByParentId(selectedDistrict?.value).map(\r\n    (parcel) => ({\r\n      value: parcel.id,\r\n      label: parcel.name,\r\n    })\r\n  );\r\n\r\n  const hobliOptions = getOptionsByParentId(selectedTaluk?.value).map(\r\n    (parcel) => ({\r\n      value: parcel.id,\r\n      label: parcel.name,\r\n    })\r\n  );\r\n\r\n  const villageOptions = getOptionsByParentId(selectedHobli?.value).map(\r\n    (parcel) => ({\r\n      value: parcel.id,\r\n      label: parcel.name,\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"container\">\r\n        <h1>Select the Farm</h1>\r\n        <label htmlFor=\"stateDropdown\">Select State:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"stateDropdown\"\r\n          options={stateOptions}\r\n          value={selectedState}\r\n          onChange={(selected) => setSelectedState(selected[0] || null)}\r\n          placeholder=\"Select State\"\r\n        />\r\n        <label htmlFor=\"districtDropdown\">Select District:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"districtDropdown\"\r\n          options={districtOptions}\r\n          value={selectedDistrict}\r\n          onChange={(selected) => setSelectedDistrict(selected[0] || null)}\r\n          placeholder=\"Select District\"\r\n        />\r\n        <label htmlFor=\"talukDropdown\">Select Taluk:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"talukDropdown\"\r\n          options={talukOptions}\r\n          value={selectedTaluk}\r\n          onChange={(selected) => setSelectedTaluk(selected[0] || null)}\r\n          placeholder=\"Select Taluk\"\r\n        />\r\n        <label htmlFor=\"hobliDropdown\">Select Hobli:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"hobliDropdown\"\r\n          options={hobliOptions}\r\n          value={selectedHobli}\r\n          onChange={(selected) => setSelectedHobli(selected[0] || null)}\r\n          placeholder=\"Select Hobli\"\r\n        />\r\n        <label htmlFor=\"villageDropdown\">Select Village:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"villageDropdown\"\r\n          options={villageOptions}\r\n          value={selectedVillage}\r\n          onChange={(selected) => setSelectedVillage(selected[0] || null)}\r\n          placeholder=\"Select Village\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}