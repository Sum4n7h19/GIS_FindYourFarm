{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\Components\\\\Menu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-dropdown-select\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  _s();\n  const [parcels, setParcels] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\n  const [selectedHobli, setSelectedHobli] = useState(null);\n  const [selectedVillage, setSelectedVillage] = useState(null);\n  useEffect(() => {\n    // Fetch all parcels using Axios\n    axios.get(\"http://127.0.0.1:5000/parcel\").then(response => {\n      if (!response.data) {\n        throw new Error(\"Empty response or response data is not valid JSON\");\n      }\n      console.log(\"Fetched data:\", response.data); // Log the fetched data\n      setParcels(response.data);\n    }).catch(error => console.error(\"Error fetching parcels:\", error));\n  }, []);\n  const getFilteredOptions = (options, parentId) => {\n    return options.filter(option => option.parentId === parentId);\n  };\n  const stateOptions = parcels.map(parcel => ({\n    value: parcel.KGISStateID,\n    label: parcel.KGISStateName\n  }));\n  const districtOptions = getFilteredOptions(parcels.map(parcel => ({\n    value: parcel.KGISDistrictID,\n    label: parcel.KGISDistrictName,\n    parentId: parcel.KGISStateID\n  })), selectedState);\n  const talukOptions = getFilteredOptions(parcels.map(parcel => ({\n    value: parcel.KGISTalukID,\n    label: parcel.KGISTalukName,\n    parentId: parcel.KGISDistrictID\n  })), selectedDistrict);\n  const hobliOptions = getFilteredOptions(parcels.map(parcel => ({\n    value: parcel.KGISHobliID,\n    label: parcel.KGISHobliName,\n    parentId: parcel.KGISTalukID\n  })), selectedTaluk);\n  const villageOptions = getFilteredOptions(parcels.map(parcel => ({\n    value: parcel.KGISVillageID,\n    label: parcel.KGISVillageName,\n    parentId: parcel.KGISHobliID\n  })), selectedHobli);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Farm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stateDropdown\",\n        children: \"Select State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"stateDropdown\",\n        options: stateOptions,\n        value: selectedState,\n        onChange: selected => setSelectedState(selected),\n        placeholder: \"Select State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"districtDropdown\",\n        children: \"Select District:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"districtDropdown\",\n        options: districtOptions,\n        value: selectedDistrict,\n        onChange: selected => setSelectedDistrict(selected),\n        placeholder: \"Select District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"talukDropdown\",\n        children: \"Select Taluk:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"talukDropdown\",\n        options: talukOptions,\n        value: selectedTaluk,\n        onChange: selected => setSelectedTaluk(selected),\n        placeholder: \"Select Taluk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hobliDropdown\",\n        children: \"Select Hobli:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"hobliDropdown\",\n        options: hobliOptions,\n        value: selectedHobli,\n        onChange: selected => setSelectedHobli(selected),\n        placeholder: \"Select Hobli\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"villageDropdown\",\n        children: \"Select Village:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"villageDropdown\",\n        options: villageOptions,\n        value: selectedVillage,\n        onChange: selected => setSelectedVillage(selected),\n        placeholder: \"Select Village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Menu, \"gOSWcNgPOsOYMuD8jpsz9wQbTB4=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useEffect","useState","Select","axios","jsxDEV","_jsxDEV","Menu","_s","parcels","setParcels","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","selectedTaluk","setSelectedTaluk","selectedHobli","setSelectedHobli","selectedVillage","setSelectedVillage","get","then","response","data","Error","console","log","catch","error","getFilteredOptions","options","parentId","filter","option","stateOptions","map","parcel","value","KGISStateID","label","KGISStateName","districtOptions","KGISDistrictID","KGISDistrictName","talukOptions","KGISTalukID","KGISTalukName","hobliOptions","KGISHobliID","KGISHobliName","villageOptions","KGISVillageID","KGISVillageName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","selected","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/Components/Menu.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-dropdown-select\";\r\nimport axios from \"axios\";\r\n\r\nconst Menu = () => {\r\n  const [parcels, setParcels] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\r\n  const [selectedHobli, setSelectedHobli] = useState(null);\r\n  const [selectedVillage, setSelectedVillage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch all parcels using Axios\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/parcel\")\r\n      .then((response) => {\r\n        if (!response.data) {\r\n          throw new Error(\"Empty response or response data is not valid JSON\");\r\n        }\r\n        console.log(\"Fetched data:\", response.data); // Log the fetched data\r\n        setParcels(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching parcels:\", error));\r\n  }, []);\r\n\r\n  const getFilteredOptions = (options, parentId) => {\r\n    return options.filter((option) => option.parentId === parentId);\r\n  };\r\n\r\n  const stateOptions = parcels.map((parcel) => ({\r\n    value: parcel.KGISStateID,\r\n    label: parcel.KGISStateName,\r\n  }));\r\n\r\n  const districtOptions = getFilteredOptions(\r\n    parcels.map((parcel) => ({\r\n      value: parcel.KGISDistrictID,\r\n      label: parcel.KGISDistrictName,\r\n      parentId: parcel.KGISStateID,\r\n    })),\r\n    selectedState\r\n  );\r\n\r\n  const talukOptions = getFilteredOptions(\r\n    parcels.map((parcel) => ({\r\n      value: parcel.KGISTalukID,\r\n      label: parcel.KGISTalukName,\r\n      parentId: parcel.KGISDistrictID,\r\n    })),\r\n    selectedDistrict\r\n  );\r\n\r\n  const hobliOptions = getFilteredOptions(\r\n    parcels.map((parcel) => ({\r\n      value: parcel.KGISHobliID,\r\n      label: parcel.KGISHobliName,\r\n      parentId: parcel.KGISTalukID,\r\n    })),\r\n    selectedTaluk\r\n  );\r\n\r\n  const villageOptions = getFilteredOptions(\r\n    parcels.map((parcel) => ({\r\n      value: parcel.KGISVillageID,\r\n      label: parcel.KGISVillageName,\r\n      parentId: parcel.KGISHobliID,\r\n    })),\r\n    selectedHobli\r\n  );\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"container\">\r\n        <h1>Select the Farm</h1>\r\n        <label htmlFor=\"stateDropdown\">Select State:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"stateDropdown\"\r\n          options={stateOptions}\r\n          value={selectedState}\r\n          onChange={(selected) => setSelectedState(selected)}\r\n          placeholder=\"Select State\"\r\n        />\r\n        <label htmlFor=\"districtDropdown\">Select District:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"districtDropdown\"\r\n          options={districtOptions}\r\n          value={selectedDistrict}\r\n          onChange={(selected) => setSelectedDistrict(selected)}\r\n          placeholder=\"Select District\"\r\n        />\r\n        <label htmlFor=\"talukDropdown\">Select Taluk:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"talukDropdown\"\r\n          options={talukOptions}\r\n          value={selectedTaluk}\r\n          onChange={(selected) => setSelectedTaluk(selected)}\r\n          placeholder=\"Select Taluk\"\r\n        />\r\n        <label htmlFor=\"hobliDropdown\">Select Hobli:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"hobliDropdown\"\r\n          options={hobliOptions}\r\n          value={selectedHobli}\r\n          onChange={(selected) => setSelectedHobli(selected)}\r\n          placeholder=\"Select Hobli\"\r\n        />\r\n        <label htmlFor=\"villageDropdown\">Select Village:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"villageDropdown\"\r\n          options={villageOptions}\r\n          value={selectedVillage}\r\n          onChange={(selected) => setSelectedVillage(selected)}\r\n          placeholder=\"Select Village\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}