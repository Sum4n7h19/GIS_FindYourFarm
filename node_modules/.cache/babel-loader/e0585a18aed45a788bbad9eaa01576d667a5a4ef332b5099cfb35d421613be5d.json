{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Components/Header\";\nimport { Container } from \"react-bootstrap\";\nimport Footer from \"./Components/Footer\";\nimport Menu from \"./Components/Menu\";\nimport \"./assests/App.css\";\nimport Map from \"./Components/Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [json, setJson] = useState(null);\n  const [data, setData] = useState([]);\n  const getData = data => {\n    setJson(null);\n    setData(data);\n    if (data !== null) {\n      axios.get(`http://localhost:5000/parcelapi/${data[1]}/${data[0]}`).then(response => {\n        if (!response.data) {\n          throw new Error(\"Empty response or response data is not valid JSON\");\n        }\n        console.log(response.data);\n        setJson(response.data[0]);\n      }).catch(error => console.error(\"Error fetching parcels:\", error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          onSubmit: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), json && /*#__PURE__*/_jsxDEV(Map, {\n          data: json\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"YGTG6uY1M/SoPgZrearyg05jgM0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Header","Container","Footer","Menu","Map","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","json","setJson","data","setData","getData","get","then","response","Error","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Components/Header\";\nimport { Container } from \"react-bootstrap\";\nimport Footer from \"./Components/Footer\";\nimport Menu from \"./Components/Menu\";\nimport \"./assests/App.css\";\nimport Map from \"./Components/Map\";\n\nconst App = () => {\n  const [json, setJson] = useState(null);\n  const [data,setData] = useState([])\n\n  const getData = (data) => {\n    setJson(null);\n    setData(data)\n    if (data !== null){\n    axios\n      .get(`http://localhost:5000/parcelapi/${data[1]}/${data[0]}`)\n      .then((response) => {\n        if (!response.data) {\n          throw new Error(\"Empty response or response data is not valid JSON\");\n        }\n        console.log(response.data)\n        setJson(response.data[0]);\n      })\n      .catch((error) => console.error(\"Error fetching parcels:\", error));\n  }};\n  return (\n    <>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Menu onSubmit={getData} />\n          {json && <Map data={json} />}\n        </Container>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,mBAAmB;AAC1B,OAAOC,GAAG,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,IAAI,EAACC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAMiB,OAAO,GAAIF,IAAI,IAAK;IACxBD,OAAO,CAAC,IAAI,CAAC;IACbE,OAAO,CAACD,IAAI,CAAC;IACb,IAAIA,IAAI,KAAK,IAAI,EAAC;MAClBd,KAAK,CACFiB,GAAG,CAAE,mCAAkCH,IAAI,CAAC,CAAC,CAAE,IAAGA,IAAI,CAAC,CAAC,CAAE,EAAC,CAAC,CAC5DI,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACL,IAAI,EAAE;UAClB,MAAM,IAAIM,KAAK,CAAC,mDAAmD,CAAC;QACtE;QACAC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACL,IAAI,CAAC;QAC1BD,OAAO,CAACM,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;IACtE;EAAC,CAAC;EACF,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACN,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA;MAAMuB,SAAS,EAAC,MAAM;MAAAL,QAAA,eACpBlB,OAAA,CAACL,SAAS;QAAAuB,QAAA,gBACRlB,OAAA,CAACH,IAAI;UAAC2B,QAAQ,EAAEf;QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC1BjB,IAAI,iBAAIL,OAAA,CAACF,GAAG;UAACS,IAAI,EAAEF;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACPtB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP,CAAC;AAAClB,EAAA,CA/BID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}