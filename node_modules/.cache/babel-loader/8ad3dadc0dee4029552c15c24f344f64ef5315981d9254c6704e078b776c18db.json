{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\Components\\\\Menu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Form, FormGroup, FormLabel, FormControl, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Select from \"react-dropdown-select\";\nimport \"../assests/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  _s();\n  const [parcels, setParcels] = useState([]);\n  const [selectedParcel, setSelectedParcel] = useState(null);\n  useEffect(() => {\n    // Fetch all parcels using Axios\n    axios.get('http://127.0.0.1:5000/parcel').then(response => {\n      if (!response.data) {\n        throw new Error('Empty response or response data is not valid JSON');\n      }\n      console.log('Fetched data:', response.data); // Log the fetched data\n      setParcels(response.data);\n    }).catch(error => console.error('Error fetching parcels:', error));\n  }, []);\n  const uniqueParcels = [...new Map(parcels.map(parcel => [parcel.KGISStateName, parcel])).values()];\n  const options = parcels.map(parcel => ({\n    value: parcel.Event_id,\n    label: `${parcel.KGISStateName}`\n  }));\n  const handleSelectChange = selectedOption => {\n    setSelectedParcel(selectedOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"parcelDropdown\",\n      children: \"Select Parcel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"select\",\n      id: \"parcelDropdown\",\n      options: options,\n      value: selectedParcel,\n      onChange: handleSelectChange,\n      placeholder: \"Select a parcel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), selectedParcel && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Parcel Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Event ID: \", selectedParcel.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Menu, \"LB84AyZhNDcc3tJTjVqPLc0zOQ8=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useEffect","useState","Form","FormGroup","FormLabel","FormControl","Button","axios","Select","jsxDEV","_jsxDEV","Menu","_s","parcels","setParcels","selectedParcel","setSelectedParcel","get","then","response","data","Error","console","log","catch","error","uniqueParcels","Map","map","parcel","KGISStateName","values","options","value","Event_id","label","handleSelectChange","selectedOption","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/Components/Menu.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-dropdown-select\";\r\nimport \"../assests/App.css\";\r\n\r\n\r\n\r\n\r\nconst Menu = () => {\r\n  const [parcels, setParcels] = useState([]);\r\n  const [selectedParcel, setSelectedParcel] = useState(null);\r\n  useEffect(() => {\r\n    // Fetch all parcels using Axios\r\n    axios.get('http://127.0.0.1:5000/parcel')\r\n      .then(response => {\r\n        if (!response.data) {\r\n          throw new Error('Empty response or response data is not valid JSON');\r\n        }\r\n        console.log('Fetched data:', response.data);  // Log the fetched data\r\n        setParcels(response.data);\r\n      })\r\n      .catch(error => console.error('Error fetching parcels:', error));\r\n  }, []);\r\n  const uniqueParcels = [...new Map(parcels.map(parcel => [parcel.KGISStateName, parcel])).values()];\r\n\r\n  const options = parcels.map(parcel => ({\r\n    value: parcel.Event_id,\r\n    label: `${parcel.KGISStateName}`\r\n  }));\r\n\r\n  const handleSelectChange = selectedOption => {\r\n    setSelectedParcel(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"parcelDropdown\">Select Parcel:</label>\r\n      <Select\r\n      className=\"select\"\r\n        id=\"parcelDropdown\"\r\n        options={options}\r\n        value={selectedParcel}\r\n        onChange={handleSelectChange}\r\n        placeholder=\"Select a parcel\"\r\n      />\r\n\r\n      {selectedParcel && (\r\n        <div>\r\n          <h2>Selected Parcel Details:</h2>\r\n          <p>Event ID: {selectedParcel.value}</p>\r\n          {/* Add other details as needed */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}