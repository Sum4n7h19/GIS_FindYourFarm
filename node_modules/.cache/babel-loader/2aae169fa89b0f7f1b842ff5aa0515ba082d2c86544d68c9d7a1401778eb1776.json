{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_colorlike_ from '../colorlike.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_has_ from '../has.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_render_canvas_ from '../render/canvas.js';\nimport _ol_style_Image_ from '../style/image.js';\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {olx.style.RegularShapeOptions} options Options.\n * @extends {ol.style.Image}\n * @api\n */\nvar _ol_style_RegularShape_ = function (options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */options.radius !== undefined ? options.radius : options.radius1;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {ol.style.AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  var snapToPixel = options.snapToPixel !== undefined ? options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n  _ol_style_Image_.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n_ol_.inherits(_ol_style_RegularShape_, _ol_style_Image_);\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.RegularShape} The cloned style.\n * @api\n */\n_ol_style_RegularShape_.prototype.clone = function () {\n  var style = new _ol_style_RegularShape_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getAnchor = function () {\n  return this.anchor_;\n};\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\n_ol_style_RegularShape_.prototype.getAngle = function () {\n  return this.angle_;\n};\n\n/**\n * Get the fill style for the shape.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getFill = function () {\n  return this.fill_;\n};\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImage = function (pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getImage = function (pixelRatio) {\n  return this.canvas_;\n};\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageSize = function () {\n  return this.imageSize_;\n};\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImageSize = function () {\n  return this.hitDetectionImageSize_;\n};\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageState = function () {\n  return _ol_ImageState_.LOADED;\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getOrigin = function () {\n  return this.origin_;\n};\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\n_ol_style_RegularShape_.prototype.getPoints = function () {\n  return this.points_;\n};\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius = function () {\n  return this.radius_;\n};\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius2 = function () {\n  return this.radius2_;\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getSize = function () {\n  return this.size_;\n};\n\n/**\n * Get the stroke style for the shape.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getStroke = function () {\n  return this.stroke_;\n};\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.listenImageChange = function (listener, thisArg) {};\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.load = function () {};\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.unlistenImageChange = function (listener, thisArg) {};\n\n/**\n * @protected\n * @param {ol.style.AtlasManager|undefined} atlasManager An atlas manager.\n */\n_ol_style_RegularShape_.prototype.render_ = function (atlasManager) {\n  var imageSize;\n  var lineCap = '';\n  var lineJoin = '';\n  var miterLimit = 0;\n  var lineDash = null;\n  var lineDashOffset = 0;\n  var strokeStyle;\n  var strokeWidth = 0;\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = _ol_render_canvas_.defaultStrokeStyle;\n    }\n    strokeStyle = _ol_colorlike_.asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = _ol_render_canvas_.defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!_ol_has_.CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = _ol_render_canvas_.defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = _ol_render_canvas_.defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = _ol_render_canvas_.defaultMiterLimit;\n    }\n  }\n  var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {ol.RegularShapeRenderOptions} */\n  var renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    var context = _ol_dom_.createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n    this.draw_(renderOptions, context, 0, 0);\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n    var hasCustomHitDetectionImage = !this.fill_;\n    var renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback = this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n    var id = this.getChecksum();\n    var info = atlasManager.add(id, size, size, this.draw_.bind(this, renderOptions), renderHitDetectionCallback);\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ = [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.draw_ = function (renderOptions, context, x, y) {\n  var i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n  context.beginPath();\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n  if (this.fill_) {\n    var color = this.fill_.getColor();\n    if (color === null) {\n      color = _ol_render_canvas_.defaultFillStyle;\n    }\n    context.fillStyle = _ol_colorlike_.asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n */\n_ol_style_RegularShape_.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  var context = _ol_dom_.createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n  context.beginPath();\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    var i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n  context.fillStyle = _ol_render_canvas_.defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_RegularShape_.prototype.getChecksum = function () {\n  var strokeChecksum = this.stroke_ ? this.stroke_.getChecksum() : '-';\n  var fillChecksum = this.fill_ ? this.fill_.getChecksum() : '-';\n  var recalculate = !this.checksums_ || strokeChecksum != this.checksums_[1] || fillChecksum != this.checksums_[2] || this.radius_ != this.checksums_[3] || this.radius2_ != this.checksums_[4] || this.angle_ != this.checksums_[5] || this.points_ != this.checksums_[6];\n  if (recalculate) {\n    var checksum = 'r' + strokeChecksum + fillChecksum + (this.radius_ !== undefined ? this.radius_.toString() : '-') + (this.radius2_ !== undefined ? this.radius2_.toString() : '-') + (this.angle_ !== undefined ? this.angle_.toString() : '-') + (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum, this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n  return this.checksums_[0];\n};\nexport default _ol_style_RegularShape_;","map":{"version":3,"names":["_ol_","_ol_colorlike_","_ol_dom_","_ol_has_","_ol_ImageState_","_ol_render_canvas_","_ol_style_Image_","_ol_style_RegularShape_","options","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","undefined","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","snapToPixel","rotateWithView","call","opacity","rotation","scale","inherits","prototype","clone","style","getFill","getPoints","getRadius","getRadius2","getAngle","getSnapToPixel","getStroke","getRotation","getRotateWithView","setOpacity","getOpacity","setScale","getScale","getAnchor","getHitDetectionImage","pixelRatio","getImage","getImageSize","getHitDetectionImageSize","getImageState","LOADED","getOrigin","getSize","listenImageChange","listener","thisArg","load","unlistenImageChange","imageSize","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeStyle","strokeWidth","getColor","defaultStrokeStyle","asColorLike","getWidth","defaultLineWidth","getLineDash","getLineDashOffset","CANVAS_LINE_DASH","getLineJoin","defaultLineJoin","getLineCap","defaultLineCap","getMiterLimit","defaultMiterLimit","size","renderOptions","context","createCanvasContext2D","canvas","width","draw_","createHitDetectionCanvas_","Math","round","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","bind","id","getChecksum","info","add","image","offsetX","offsetY","hitImage","height","x","y","i","angle0","radiusC","setTransform","translate","beginPath","Infinity","arc","PI","lineTo","cos","sin","color","defaultFillStyle","fillStyle","lineWidth","setLineDash","closePath","strokeChecksum","fillChecksum","recalculate","checksum","toString"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/node_modules/ol/style/regularshape.js"],"sourcesContent":["import _ol_ from '../index.js';\nimport _ol_colorlike_ from '../colorlike.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_has_ from '../has.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_render_canvas_ from '../render/canvas.js';\nimport _ol_style_Image_ from '../style/image.js';\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {olx.style.RegularShapeOptions} options Options.\n * @extends {ol.style.Image}\n * @api\n */\nvar _ol_style_RegularShape_ = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {ol.style.AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  var snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  var rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  _ol_style_Image_.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\n_ol_.inherits(_ol_style_RegularShape_, _ol_style_Image_);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.RegularShape} The cloned style.\n * @api\n */\n_ol_style_RegularShape_.prototype.clone = function() {\n  var style = new _ol_style_RegularShape_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\n_ol_style_RegularShape_.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageState = function() {\n  return _ol_ImageState_.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\n_ol_style_RegularShape_.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {ol.style.AtlasManager|undefined} atlasManager An atlas manager.\n */\n_ol_style_RegularShape_.prototype.render_ = function(atlasManager) {\n  var imageSize;\n  var lineCap = '';\n  var lineJoin = '';\n  var miterLimit = 0;\n  var lineDash = null;\n  var lineDashOffset = 0;\n  var strokeStyle;\n  var strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = _ol_render_canvas_.defaultStrokeStyle;\n    }\n    strokeStyle = _ol_colorlike_.asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = _ol_render_canvas_.defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!_ol_has_.CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = _ol_render_canvas_.defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = _ol_render_canvas_.defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = _ol_render_canvas_.defaultMiterLimit;\n    }\n  }\n\n  var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {ol.RegularShapeRenderOptions} */\n  var renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    var context = _ol_dom_.createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    var hasCustomHitDetectionImage = !this.fill_;\n    var renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    var id = this.getChecksum();\n    var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.draw_ = function(renderOptions, context, x, y) {\n  var i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    var color = this.fill_.getColor();\n    if (color === null) {\n      color = _ol_render_canvas_.defaultFillStyle;\n    }\n    context.fillStyle = _ol_colorlike_.asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n */\n_ol_style_RegularShape_.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  var context = _ol_dom_.createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    var i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = _ol_render_canvas_.defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_RegularShape_.prototype.getChecksum = function() {\n  var strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  var fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  var recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    var checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default _ol_style_RegularShape_;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}