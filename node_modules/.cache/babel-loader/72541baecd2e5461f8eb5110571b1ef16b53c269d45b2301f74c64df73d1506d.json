{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\Components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TileLayer, MapContainer, GeoJSON } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\"; // Make sure to import the Leaflet CSS\nimport data from \"../map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  data\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  {\n    /*\r\n    const [lat, setLat] = useState(null)\r\n    const [lon, setLon] = useState(null)\r\n    const [center, setCenter] = useState([])\r\n    if (data !== null) {\r\n    const longitude = data.bbox[0]\r\n    setLon(longitude.toFixed(4))\r\n    const latitude = data.bbox[1]\r\n    setLat(latitude.toFixed(4))\r\n    } else {\r\n    setCenter([13.21,76.15])\r\n    }\r\n    */\n  }\n  useEffect(() => {\n    if (map && data && data.features.length > 0) {\n      // Calculate the bounding box of the GeoJSON features\n      const bounds = L.geoJSON(data).getBounds();\n\n      // Set the map center and zoom based on the bounding box\n      map.fitBounds(bounds);\n    }\n  }, [map, data]);\n  const setColor = ({\n    properties\n  }) => {\n    return {\n      weight: 1,\n      color: \"red\"\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [15.3323, 76.2387],\n    zoom: 12,\n    className: \"map-container\",\n    whenCreated: setMap,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: data,\n      style: setColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"4bJBv0PO2rrDzFRchWWuXyIru0A=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","TileLayer","MapContainer","GeoJSON","L","data","jsxDEV","_jsxDEV","Map","_s","map","setMap","features","length","bounds","geoJSON","getBounds","fitBounds","setColor","properties","weight","color","center","zoom","className","whenCreated","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/Components/Map.jsx"],"sourcesContent":["import React, {useState,useEffect } from \"react\";\r\nimport { TileLayer, MapContainer, GeoJSON } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\"; // Make sure to import the Leaflet CSS\r\nimport data from \"../map.json\";\r\n\r\nconst Map = ({ data }) => {\r\n  const [map, setMap] = useState(null);\r\n  {\r\n    /*\r\n  const [lat, setLat] = useState(null)\r\n  const [lon, setLon] = useState(null)\r\n  const [center, setCenter] = useState([])\r\n  if (data !== null) {\r\n    const longitude = data.bbox[0]\r\n    setLon(longitude.toFixed(4))\r\n    const latitude = data.bbox[1]\r\n    setLat(latitude.toFixed(4))\r\n  } else {\r\n    setCenter([13.21,76.15])\r\n  }\r\n*/\r\n  }\r\n  useEffect(() => {\r\n    if (map && data && data.features.length > 0) {\r\n      // Calculate the bounding box of the GeoJSON features\r\n      const bounds = L.geoJSON(data).getBounds();\r\n\r\n      // Set the map center and zoom based on the bounding box\r\n      map.fitBounds(bounds);\r\n    }\r\n  }, [map, data]);\r\n  const setColor = ({ properties }) => {\r\n    return { weight: 1, color: \"red\" };\r\n  };\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[15.3323, 76.2387]}\r\n      zoom={12}\r\n      className=\"map-container\"\r\n      whenCreated={setMap}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      <GeoJSON data={data} style={setColor} />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAChD,SAASC,SAAS,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAChE,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B,CAAC,CAAC;AACnC,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,GAAG,GAAGA,CAAC;EAAEH;AAAK,CAAC,KAAK;EAAAI,EAAA;EACxB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpC;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZI;EAcFC,SAAS,CAAC,MAAM;IACd,IAAIU,GAAG,IAAIL,IAAI,IAAIA,IAAI,CAACO,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3C;MACA,MAAMC,MAAM,GAAGV,CAAC,CAACW,OAAO,CAACV,IAAI,CAAC,CAACW,SAAS,CAAC,CAAC;;MAE1C;MACAN,GAAG,CAACO,SAAS,CAACH,MAAM,CAAC;IACvB;EACF,CAAC,EAAE,CAACJ,GAAG,EAAEL,IAAI,CAAC,CAAC;EACf,MAAMa,QAAQ,GAAGA,CAAC;IAAEC;EAAW,CAAC,KAAK;IACnC,OAAO;MAAEC,MAAM,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAM,CAAC;EACpC,CAAC;EAED,oBACEd,OAAA,CAACL,YAAY;IACXoB,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE;IAC3BC,IAAI,EAAE,EAAG;IACTC,SAAS,EAAC,eAAe;IACzBC,WAAW,EAAEd,MAAO;IAAAe,QAAA,gBAEpBnB,OAAA,CAACN,SAAS;MACR0B,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAA0E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACFzB,OAAA,CAACJ,OAAO;MAACE,IAAI,EAAEA,IAAK;MAAC4B,KAAK,EAAEf;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEnB,CAAC;AAACvB,EAAA,CA5CID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}