{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\Parcel\\\\findyourfarm\\\\src\\\\Components\\\\Menu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-dropdown-select\";\nimport \"../assests/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  _s();\n  const [parcels, setParcels] = useState([]);\n  const [selectedState, setSelectedState] = useState(null);\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\n  const [selectedHobli, setSelectedHobli] = useState(null);\n  const [selectedVillage, setSelectedVillage] = useState(null);\n  useEffect(() => {\n    // Fetch all parcels using Axios\n    axios.get(\"http://127.0.0.1:5000/parcel\").then(response => {\n      if (!response.data) {\n        throw new Error(\"Empty response or response data is not valid JSON\");\n      }\n      console.log(\"Fetched data:\", response.data); // Log the fetched data\n      setParcels(response.data);\n    }).catch(error => console.error(\"Error fetching parcels:\", error));\n  }, []);\n  const getOptionsByParent = (parent, parentValue) => {\n    if (!parentValue) return []; // No parent value, return empty options\n\n    const filteredOptions = parcels.filter(parcel => parcel[parent] === parentValue).map(parcel => ({\n      value: parcel.Event_id,\n      label: parcel[parent]\n    }));\n\n    // Deduplicate options based on 'value'\n    const uniqueOptions = Array.from(new Map(filteredOptions.map(option => [option.value, option])).values());\n    return uniqueOptions;\n  };\n  const stateOptions = getOptionsByParent(\"KGISStateName\", null);\n  const districtOptions = getOptionsByParent(\"KGISDistrictName\", selectedState);\n  const talukOptions = getOptionsByParent(\"KGISTalukName\", selectedDistrict);\n  const hobliOptions = getOptionsByParent(\"KGISHobliName\", selectedTaluk);\n  const villageOptions = getOptionsByParent(\"KGISVillageName\", selectedHobli);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select the Farm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stateDropdown\",\n        children: \"Select State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"stateDropdown\",\n        options: stateOptions,\n        value: selectedState,\n        onChange: value => setSelectedState(value[0]),\n        placeholder: \"Select State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"districtDropdown\",\n        children: \"Select District:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"districtDropdown\",\n        options: districtOptions,\n        value: selectedDistrict,\n        onChange: value => setSelectedDistrict(value[0]),\n        placeholder: \"Select District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"talukDropdown\",\n        children: \"Select Taluk:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"talukDropdown\",\n        options: talukOptions,\n        value: selectedTaluk,\n        onChange: value => setSelectedTaluk(value[0]),\n        placeholder: \"Select Taluk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hobliDropdown\",\n        children: \"Select Hobli:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"hobliDropdown\",\n        options: hobliOptions,\n        value: selectedHobli,\n        onChange: value => setSelectedHobli(value[0]),\n        placeholder: \"Select Hobli\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"villageDropdown\",\n        children: \"Select Village:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"select\",\n        id: \"villageDropdown\",\n        options: villageOptions,\n        value: selectedVillage,\n        onChange: value => setSelectedVillage(value[0]),\n        placeholder: \"Select Village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Menu, \"gOSWcNgPOsOYMuD8jpsz9wQbTB4=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useEffect","useState","axios","Select","jsxDEV","_jsxDEV","Menu","_s","parcels","setParcels","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","selectedTaluk","setSelectedTaluk","selectedHobli","setSelectedHobli","selectedVillage","setSelectedVillage","get","then","response","data","Error","console","log","catch","error","getOptionsByParent","parent","parentValue","filteredOptions","filter","parcel","map","value","Event_id","label","uniqueOptions","Array","from","Map","option","values","stateOptions","districtOptions","talukOptions","hobliOptions","villageOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","options","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/src/Components/Menu.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-dropdown-select\";\r\nimport \"../assests/App.css\";\r\n\r\nconst Menu = () => {\r\n  const [parcels, setParcels] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\r\n  const [selectedTaluk, setSelectedTaluk] = useState(null);\r\n  const [selectedHobli, setSelectedHobli] = useState(null);\r\n  const [selectedVillage, setSelectedVillage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch all parcels using Axios\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/parcel\")\r\n      .then((response) => {\r\n        if (!response.data) {\r\n          throw new Error(\"Empty response or response data is not valid JSON\");\r\n        }\r\n        console.log(\"Fetched data:\", response.data); // Log the fetched data\r\n        setParcels(response.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching parcels:\", error));\r\n  }, []);\r\n\r\n  const getOptionsByParent = (parent, parentValue) => {\r\n    if (!parentValue) return []; // No parent value, return empty options\r\n\r\n    const filteredOptions = parcels\r\n      .filter((parcel) => parcel[parent] === parentValue)\r\n      .map((parcel) => ({ value: parcel.Event_id, label: parcel[parent] }));\r\n\r\n    // Deduplicate options based on 'value'\r\n    const uniqueOptions = Array.from(new Map(filteredOptions.map((option) => [option.value, option])).values());\r\n\r\n    return uniqueOptions;\r\n  };\r\n\r\n  const stateOptions = getOptionsByParent(\"KGISStateName\", null);\r\n  const districtOptions = getOptionsByParent(\"KGISDistrictName\", selectedState);\r\n  const talukOptions = getOptionsByParent(\"KGISTalukName\", selectedDistrict);\r\n  const hobliOptions = getOptionsByParent(\"KGISHobliName\", selectedTaluk);\r\n  const villageOptions = getOptionsByParent(\"KGISVillageName\", selectedHobli);\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"container\">\r\n        <h1>Select the Farm</h1>\r\n        <label htmlFor=\"stateDropdown\">Select State:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"stateDropdown\"\r\n          options={stateOptions}\r\n          value={selectedState}\r\n          onChange={(value) => setSelectedState(value[0])}\r\n          placeholder=\"Select State\"\r\n        />\r\n        <label htmlFor=\"districtDropdown\">Select District:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"districtDropdown\"\r\n          options={districtOptions}\r\n          value={selectedDistrict}\r\n          onChange={(value) => setSelectedDistrict(value[0])}\r\n          placeholder=\"Select District\"\r\n        />\r\n        <label htmlFor=\"talukDropdown\">Select Taluk:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"talukDropdown\"\r\n          options={talukOptions}\r\n          value={selectedTaluk}\r\n          onChange={(value) => setSelectedTaluk(value[0])}\r\n          placeholder=\"Select Taluk\"\r\n        />\r\n        <label htmlFor=\"hobliDropdown\">Select Hobli:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"hobliDropdown\"\r\n          options={hobliOptions}\r\n          value={selectedHobli}\r\n          onChange={(value) => setSelectedHobli(value[0])}\r\n          placeholder=\"Select Hobli\"\r\n        />\r\n        <label htmlFor=\"villageDropdown\">Select Village:</label>\r\n        <Select\r\n          className=\"select\"\r\n          id=\"villageDropdown\"\r\n          options={villageOptions}\r\n          value={selectedVillage}\r\n          onChange={(value) => setSelectedVillage(value[0])}\r\n          placeholder=\"Select Village\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}