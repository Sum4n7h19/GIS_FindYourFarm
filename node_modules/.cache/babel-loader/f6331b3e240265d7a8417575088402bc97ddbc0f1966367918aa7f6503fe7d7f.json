{"ast":null,"code":"import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {ol.geom.Geometry}\n * @api\n */\nvar _ol_geom_SimpleGeometry_ = function () {\n  _ol_geom_Geometry_.call(this);\n\n  /**\n   * @protected\n   * @type {ol.geom.GeometryLayout}\n   */\n  this.layout = _ol_geom_GeometryLayout_.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n};\n_ol_.inherits(_ol_geom_SimpleGeometry_, _ol_geom_Geometry_);\n\n/**\n * @param {number} stride Stride.\n * @private\n * @return {ol.geom.GeometryLayout} layout Layout.\n */\n_ol_geom_SimpleGeometry_.getLayoutForStride_ = function (stride) {\n  var layout;\n  if (stride == 2) {\n    layout = _ol_geom_GeometryLayout_.XY;\n  } else if (stride == 3) {\n    layout = _ol_geom_GeometryLayout_.XYZ;\n  } else if (stride == 4) {\n    layout = _ol_geom_GeometryLayout_.XYZM;\n  }\n  return /** @type {ol.geom.GeometryLayout} */layout;\n};\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.getStrideForLayout = function (layout) {\n  var stride;\n  if (layout == _ol_geom_GeometryLayout_.XY) {\n    stride = 2;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZ || layout == _ol_geom_GeometryLayout_.XYM) {\n    stride = 3;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */stride;\n};\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.containsXY = _ol_functions_.FALSE;\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.computeExtent = function (extent) {\n  return _ol_extent_.createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n};\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getCoordinates = function () {};\n\n/**\n * Return the first coordinate of the geometry.\n * @return {ol.Coordinate} First coordinate.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getFirstCoordinate = function () {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getFlatCoordinates = function () {\n  return this.flatCoordinates;\n};\n\n/**\n * Return the last coordinate of the geometry.\n * @return {ol.Coordinate} Last point.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLastCoordinate = function () {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n/**\n * Return the {@link ol.geom.GeometryLayout layout} of the geometry.\n * @return {ol.geom.GeometryLayout} Layout.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLayout = function () {\n  return this.layout;\n};\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 || this.simplifiedGeometryMaxMinSquaredTolerance !== 0 && squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n    var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.SimpleGeometry} Simplified geometry.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n  return this;\n};\n\n/**\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.prototype.getStride = function () {\n  return this.stride;\n};\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setFlatCoordinatesInternal = function (layout, flatCoordinates) {\n  this.stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n */\n_ol_geom_SimpleGeometry_.prototype.setCoordinates = function (coordinates, opt_layout) {};\n\n/**\n * @param {ol.geom.GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setLayout = function (layout, coordinates, nesting) {\n  /** @type {number} */\n  var stride;\n  if (layout) {\n    stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  } else {\n    var i;\n    for (i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = _ol_geom_GeometryLayout_.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */coordinates[0];\n      }\n    }\n    stride = coordinates.length;\n    layout = _ol_geom_SimpleGeometry_.getLayoutForStride_(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.applyTransform = function (transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.rotate = function (angle, anchor) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.scale = function (sx, opt_sy, opt_anchor) {\n  var sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = _ol_extent_.getCenter(this.getExtent());\n  }\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.translate = function (deltaX, deltaY) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n/**\n * @param {ol.geom.SimpleGeometry} simpleGeometry Simple geometry.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\n_ol_geom_SimpleGeometry_.transform2D = function (simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return _ol_geom_flat_transform_.transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n  }\n};\nexport default _ol_geom_SimpleGeometry_;","map":{"version":3,"names":["_ol_","_ol_functions_","_ol_extent_","_ol_geom_Geometry_","_ol_geom_GeometryLayout_","_ol_geom_flat_transform_","_ol_obj_","_ol_geom_SimpleGeometry_","call","layout","XY","stride","flatCoordinates","inherits","getLayoutForStride_","XYZ","XYZM","getStrideForLayout","XYM","prototype","containsXY","FALSE","computeExtent","extent","createOrUpdateFromFlatCoordinates","length","getCoordinates","getFirstCoordinate","slice","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","clear","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","key","toString","hasOwnProperty","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinatesInternal","setCoordinates","coordinates","opt_layout","setLayout","nesting","i","applyTransform","transformFn","changed","rotate","angle","anchor","scale","sx","opt_sy","opt_anchor","sy","undefined","getCenter","getExtent","translate","deltaX","deltaY","transform2D","simpleGeometry","transform","opt_dest"],"sources":["C:/Users/wwwsu/Desktop/Parcel/findyourfarm/node_modules/ol/geom/simplegeometry.js"],"sourcesContent":["import _ol_ from '../index.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_flat_transform_ from '../geom/flat/transform.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {ol.geom.Geometry}\n * @api\n */\nvar _ol_geom_SimpleGeometry_ = function() {\n\n  _ol_geom_Geometry_.call(this);\n\n  /**\n   * @protected\n   * @type {ol.geom.GeometryLayout}\n   */\n  this.layout = _ol_geom_GeometryLayout_.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\n_ol_.inherits(_ol_geom_SimpleGeometry_, _ol_geom_Geometry_);\n\n\n/**\n * @param {number} stride Stride.\n * @private\n * @return {ol.geom.GeometryLayout} layout Layout.\n */\n_ol_geom_SimpleGeometry_.getLayoutForStride_ = function(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = _ol_geom_GeometryLayout_.XY;\n  } else if (stride == 3) {\n    layout = _ol_geom_GeometryLayout_.XYZ;\n  } else if (stride == 4) {\n    layout = _ol_geom_GeometryLayout_.XYZM;\n  }\n  return /** @type {ol.geom.GeometryLayout} */ (layout);\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.getStrideForLayout = function(layout) {\n  var stride;\n  if (layout == _ol_geom_GeometryLayout_.XY) {\n    stride = 2;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZ || layout == _ol_geom_GeometryLayout_.XYM) {\n    stride = 3;\n  } else if (layout == _ol_geom_GeometryLayout_.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.containsXY = _ol_functions_.FALSE;\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.computeExtent = function(extent) {\n  return _ol_extent_.createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {ol.Coordinate} First coordinate.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\n_ol_geom_SimpleGeometry_.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {ol.Coordinate} Last point.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link ol.geom.GeometryLayout layout} of the geometry.\n * @return {ol.geom.GeometryLayout} Layout.\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {ol.geom.SimpleGeometry} Simplified geometry.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\n_ol_geom_SimpleGeometry_.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n */\n_ol_geom_SimpleGeometry_.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\n_ol_geom_SimpleGeometry_.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  var stride;\n  if (layout) {\n    stride = _ol_geom_SimpleGeometry_.getStrideForLayout(layout);\n  } else {\n    var i;\n    for (i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = _ol_geom_GeometryLayout_.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = _ol_geom_SimpleGeometry_.getLayoutForStride_(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.rotate = function(angle, anchor) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = _ol_extent_.getCenter(this.getExtent());\n  }\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_SimpleGeometry_.prototype.translate = function(deltaX, deltaY) {\n  var flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    var stride = this.getStride();\n    _ol_geom_flat_transform_.translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} simpleGeometry Simple geometry.\n * @param {ol.Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\n_ol_geom_SimpleGeometry_.transform2D = function(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return _ol_geom_flat_transform_.transform2D(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        transform, opt_dest);\n  }\n};\nexport default _ol_geom_SimpleGeometry_;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}